#include <stdio.h>

int firstOccurrence(int arr[], int n, int key, int *comparisons) {
    int left = 0, right = n - 1, result = -1;
    while (left <= right) {
        (*comparisons)++;
        int mid = left + (right - left) / 2;
        if (arr[mid] == key) {
            result = mid;
            right = mid - 1;
        } else if (arr[mid] < key)
            left = mid + 1;
        else
            right = mid - 1;
    }
    return result;
}

int lastOccurrence(int arr[], int n, int key, int *comparisons) {
    int left = 0, right = n - 1, result = -1;
    while (left <= right) {
        (*comparisons)++;
        int mid = left + (right - left) / 2;
        if (arr[mid] == key) {
            result = mid;
            left = mid + 1;
        } else if (arr[mid] < key)
            left = mid + 1;
        else
            right = mid - 1;
    }
    return result;
}

int main() {
    int n, key, comparisons = 0;
    scanf("%d", &n);
    int arr[n];
    for (int i = 0; i < n; i++)
        scanf("%d", &arr[i]);
    scanf("%d", &key);
    int first = firstOccurrence(arr, n, key, &comparisons);
    int last = lastOccurrence(arr, n, key, &comparisons);
    if (first == -1)
        printf("Key not found\n");
    else {
        printf("Key found\n");
        printf("Count: %d\n", last - first + 1);
    }
    printf("Total comparisons: %d\n", comparisons);
    return 0;
}
